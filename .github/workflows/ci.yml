name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  UV_VERSION: 0.4.5

jobs:
  linting:
    name: "Perform linting checks"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          uv-version: ${{ env.UV_VERSION }}
          uv-install-options: "--all-extras"
          cache-pre-commit: true
      - name: "Run pre-commit checks"
        run: |
          uv run pre-commit run --all-files --verbose

  docs:
    name: "Build docs"
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          uv-version: ${{ env.UV_VERSION }}
          uv-install-options: "--extra docs --no-dev"
      - name: Make docs uv
        run: |
          uv run make -C docs html

  tests:
    name: Tests - Python ${{ matrix.python-version}} on ${{ matrix.os }}${{ fromJSON('[" (listen)", ""]')[matrix.extras == ''] }}
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy-3.9", "pypy-3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        extras: [false, true]
        exclude:
          - os: macos-latest
            extras: true
          - os: windows-latest
            extras: true
          - os: ubuntu-latest
            python-version: "pypy-3.9"
            extras: true
          - os: ubuntu-latest
            python-version: "pypy-3.10"
            extras: true
          - os: ubuntu-latest
            python-version: "3.9"
            extras: true
          - os: ubuntu-latest
            python-version: "3.10"
            extras: true
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          uv-version: ${{ env.UV_VERSION }}
          uv-install-options: ${{ matrix.extras == true && '--extra listen' || '' }}
      - name: Run tests
        run: >
          uv run pytest tests/
          --cov=ring_doorbell --cov-report=xml
          --cov-report=term-missing --import-mode importlib
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.2.3
        with:
          file: coverage.xml
          debug: true
          parallel: true
        if: ${{ success() && matrix.python-version == '3.12' }}

  finish:
    name: Finish coverage build
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Close parallel build
        uses: coverallsapp/github-action@v2.2.3
        with:
          parallel-finished: true
