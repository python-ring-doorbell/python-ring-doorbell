name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  POETRY_VERSION: 1.8.2

jobs:
  linting:
    name: "Perform linting checks"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          poetry-install-options: "--sync --extras listen --verbose"
          cache-pre-commit: true
      - name: "Run pre-commit checks"
        run: |
          poetry run pre-commit run --all-files

  docs:
    name: "Build docs"
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          poetry-install-options: "--sync --extras docs --without dev"
      - name: Make docs poetry
        run: |
          poetry run make -C docs html

  tests:
    name: tests
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: "actions/checkout@v4"
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          poetry-install-options: "--sync --extras listen"
      - name: Run tests
        run: >
          poetry run pytest tests/
          --cov=ring_doorbell --cov-report=xml
          --cov-report=term-missing --import-mode importlib
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.2.3
        with:
          file: coverage.xml
          debug: true
        if: ${{ success() && matrix.python-version == '3.12' }}
