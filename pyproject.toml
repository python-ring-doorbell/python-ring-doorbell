[project]
name = "ring-doorbell"
version = "0.9.13"
description = "A Python library to communicate with Ring Door Bell (https://ring.com/)"
authors = [{ name = "python-ring-doorbell developers" }]
license = { text="LGPL-3.0-or-later" }
readme = "README.rst"
requires-python = ">=3.9.0"
dependencies = [
    "oauthlib>=3.0.0,<4",
    "pytz>=2022.0",
    "asyncclick>=8.1.7.1",
    "aiohttp>=3",
    "aiofiles>=23",
    "typing-extensions>=4.12.2,<5.0",
    "async-timeout>=3.0.0",
    "websockets>=13.0.0",
    "firebase-messaging>=0.4.0",
]

keywords = [
    "ring",
    "door bell",
    "camera",
    "home automation",
]
classifiers = [
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[project.urls]
homepage = "https://github.com/python-ring-doorbell/python-ring-doorbell"
repository = "https://github.com/python-ring-doorbell/python-ring-doorbell"
documentation = "http://python-ring-doorbell.readthedocs.io/"
"Bug Tracker" = "https://github.com/python-ring-doorbell/python-ring-doorbell/issues"

[project.scripts]
ring-doorbell = "ring_doorbell.cli:cli"

[project.optional-dependencies]
docs = ["sphinx<7.2.6", "sphinx-rtd-theme~=1.3", "myst-parser"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
  "/ring_doorbell",
  "/tests",
  "/CHANGELOG.md",
]

[tool.uv]
dev-dependencies = [
    "mock",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "requests-mock",
    "pytest-asyncio",
    "pytest-mock",
    "pytest-socket",
    "ruff",
    "types-pytz>=2022.0",
    "pytest-freezer~=0.4",
    "types-oauthlib>=3.0.0,<4",
    "aioresponses~=0.7",
    "types-aiofiles>=23",
    "mypy~=1.0"
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
norecursedirs = ".git"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "--disable-socket --allow-unix-socket"
filterwarnings = [
    "ignore:.*google._upb._message.MessageMapContainer uses PyType_Spec.*:DeprecationWarning",
    "ignore:.*google._upb._message.ScalarMapContainer uses PyType_Spec.*:DeprecationWarning",
    "ignore:.*datetime.datetime.utcnow.*:DeprecationWarning"
]

[tool.coverage.run]
source = ["ring_doorbell"]
branch = true
omit = ["ring_doorbell/rtcstream.py*"]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
ignore = [
  "ANN101", # Self... explanatory
  "ANN102", # cls... just as useless
  "ANN401", # Opinionated warning on disallowing dynamically typed expressions
  "ASYNC109", # Opinionated warning on not allowing timeout parameters in favour of asyncio.timeout
  "COM812", # Conflicts with other rules
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "ISC001", # Conflicts with other rules
  "PLR2004", # Just annoying, not really useful
  "TRY003", # Long exception messages in custom exception classes
]
select = ["ALL"]
exclude = [
    "ring_doorbell/cli.py",
    "test.py",
    "test_sync.py"
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
exclude = [
    'tests/.*',  # TOML literal string (single-quotes, no escaping necessary)
    'docs/.*',
    'test\.py$',
    'test_sync\.py$',
]
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "ring_doorbell.cli"
]
disallow_untyped_defs = false

[tool.doc8]
paths = ["docs"]
ignore = ["D001"]
ignore-path =  ["docs/build"]
ignore-path-errors = ["docs/source/index.rst;D000"]
