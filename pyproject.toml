[tool.poetry]
name = "ring-doorbell"
version = "0.9.1"
description = "A Python library to communicate with Ring Door Bell (https://ring.com/)"
authors = ["Marcelo Moreira de Mello <tchello.mello@gmail.com>"]
license = "LGPL-3.0-or-later"
readme = "README.rst"
homepage = "https://github.com/tchellomello/python-ring-doorbell"
repository = "https://github.com/tchellomello/python-ring-doorbell"
documentation = "http://python-ring-doorbell.readthedocs.io/"
keywords = [
    "ring",
    "door bell",
    "camera",
    "home automation",
]
classifiers = [
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "ring_doorbell" },
    { include = "tests", format = "sdist" },
]
include = [
    { path = "CHANGELOG.rst", format = "sdist" }
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/tchellomello/python-ring-doorbell/issues"

[tool.poetry.scripts]
ring-doorbell = "ring_doorbell.cli:cli"

[tool.poetry.dependencies]
python = "^3.9"
oauthlib = ">=3.0.0,<4"
pytz = ">=2022.0"
asyncclick = ">=8"
aiohttp = ">=3"
aiofiles = ">=23"
anyio = "*" # see https://github.com/python-trio/asyncclick/issues/18
sphinx = {version = "<7.2.6", optional = true}
sphinx-rtd-theme = {version = "^1.3.0", optional = true}
myst-parser = { version = "*", optional = true }
firebase-messaging = {version = "^0.3.0", optional = true}
typing-extensions = ">=4.12.2,<5.0"

[tool.poetry.group.dev.dependencies]
mock = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
requests-mock = "*"
pytest-asyncio = "*"
pytest-mock = "*"
pytest-socket = "*"
ruff = "*"
types-pytz = ">=2022.0"
pytest-freezer = "^0.4"
types-oauthlib = ">=3.0.0,<4"
aioresponses = "^0.7.6"
types-aiofiles = ">=23"
mypy = "^1"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser"]
listen = ["firebase-messaging"]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
norecursedirs = ".git"
asyncio_mode = "auto"
addopts = "--allow-hosts=127.0.0.1,::1"
#addopts = "--force-enable-socket"
filterwarnings = [
    "ignore:.*google._upb._message.MessageMapContainer uses PyType_Spec.*:DeprecationWarning",
    "ignore:.*google._upb._message.ScalarMapContainer uses PyType_Spec.*:DeprecationWarning",
    "ignore:.*datetime.datetime.utcnow.*:DeprecationWarning"
]

[tool.coverage.run]
source = ["ring_doorbell"]
branch = true

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
ignore = [
  "ANN101", # Self... explanatory
  "ANN102", # cls... just as useless
  "ANN401", # Opinionated warning on disallowing dynamically typed expressions
  "ASYNC109", # Opinionated warning on not allowing timeout parameters in favour of asyncio.timeout
  "COM812", # Conflicts with other rules
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "ISC001", # Conflicts with other rules
  "PLR2004", # Just annoying, not really useful
  "TRY003", # Long exception messages in custom exception classes
]
select = ["ALL"]
exclude = [
    "ring_doorbell/cli.py",
    "test.py",
    "test_sync.py"
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
exclude = [
    'tests/.*',  # TOML literal string (single-quotes, no escaping necessary)
    'docs/.*',
    'test\.py$',
    'test_sync\.py$',
]
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "ring_doorbell.cli"
]
disallow_untyped_defs = false

[tool.doc8]
paths = ["docs"]
ignore = ["D001"]
ignore-path =  ["docs/build"]
ignore-path-errors = ["docs/source/index.rst;D000"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
